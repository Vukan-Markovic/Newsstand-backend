<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
	<db:template-query name="selectAllRacun" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\selectAllRacun.sql" />
	</db:template-query>
	<db:template-query name="selectByIDRacun" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\selectByIDRacun.sql" />
	</db:template-query>
	<db:template-query name="insertRacun" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\insertRacun.sql" />
	</db:template-query>
	<db:template-query name="updateRacun" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\updateRacun.sql" />
	</db:template-query>
	<db:template-query name="deleteRacun" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\deleteRacun.sql" />
	</db:template-query>
	<flow name="getRacuniFlow">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="selectAllRacun" />
		</db:select>
		<choice doc:name="Choice">
			<when expression="#[payload == empty]">
				<set-property doc:name="Property" propertyName="Content-Type"
					value="application/json" />
				<set-payload doc:name="Set Payload"
					value="{  &quot;message&quot;: &quot;Trenutno nema ra&#269;una u bazi podataka&quot; }" />
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message"
					metadata:id="222432db-7d9b-4d5f-9573-0f9a340d0970">
					<dw:input-payload doc:sample="sample_data\Racun.dwl"
						mimeType="application/java" />
					<dw:set-payload resource="classpath:json_racun_playground.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
	</flow>
	<flow name="getRacunByIDFlow">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="selectByIDRacun" />
		</db:select>
		<choice doc:name="Choice">
			<when expression="#[payload == empty]">
				<flow-ref name="racunErrorFlow" doc:name="racunErrorFlow" />
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message"
					metadata:id="222c4bd6-75df-4a1c-bbaa-1700cf6d8c38">
					<dw:input-payload doc:sample="sample_data\Racun.dwl"
						mimeType="application/java" />
					<dw:set-payload resource="classpath:json_racun_playground.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
	</flow>
	<flow name="postRacunFlow">
		<dw:transform-message doc:name="Transform Message"
			metadata:id="72c76926-c11e-42e8-8d25-739caccbe003">
			<dw:input-payload mimeType="application/json" />
			<dw:set-payload resource="classpath:java_playground.dwl" />
		</dw:transform-message>
		<flow-ref name="insertRacunFlow" doc:name="insertRacunFlow" />
	</flow>
	<flow name="putRacunByIDFlow">
		<dw:transform-message doc:name="Transform Message"
			metadata:id="27b0d247-0555-4564-bfd5-3d7106c31ded">
			<dw:input-payload doc:sample="racun-example.json"
				mimeType="application/json" />
			<dw:set-payload resource="classpath:java_playground.dwl" />
		</dw:transform-message>
		<enricher target="#[flowVars.result]" doc:name="Message Enricher">
			<db:update config-ref="Generic_Database_Configuration"
				doc:name="Database">
				<db:template-query-ref name="updateRacun" />
			</db:update>
		</enricher>
		<choice doc:name="Choice">
			<when expression="#[flowVars.result == empty]">
				<flow-ref name="insertRacunFlow" doc:name="insertRacunFlow" />
				<set-property propertyName="http.status" value="201"
					doc:name="Property" />
			</when>
			<otherwise>
				<set-property propertyName="Content-Type" value="application/json"
					doc:name="Property" />
				<set-payload
					value="{ &quot;message&quot;: &quot;A&#382;uriran ra&#269;un sa id: #[message.inboundProperties.'http.uri.params'.ID]&quot; }"
					doc:name="Set Payload" />
			</otherwise>
		</choice>
	</flow>
	<flow name="deleteRacunByIDFlow">
		<db:delete config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="deleteRacun" />
		</db:delete>
		<choice doc:name="Choice">
			<when expression="#[payload == empty]">
				<flow-ref name="racunErrorFlow" doc:name="racunErrorFlow" />
			</when>
			<otherwise>
				<set-property propertyName="Content-Type" value="application/json"
					doc:name="Property" />
				<set-payload
					value="{ &quot;message&quot;: &quot;Obrisan ra&#269;un sa id: #[message.inboundProperties.'http.uri.params'.ID]&quot; }"
					doc:name="Set Payload" />
			</otherwise>
		</choice>
	</flow>
	<flow name="insertRacunFlow">
		<db:insert config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="insertRacun" />
		</db:insert>
		<set-property propertyName="Content-Type" value="application/json"
			doc:name="Property" />
		<set-payload
			value="{ &quot;message&quot;: &quot;Dodat novi ra&#269;un&quot; }"
			doc:name="Set Payload" />
	</flow>
	<flow name="racunErrorFlow">
		<set-property propertyName="http.status" value="404"
			doc:name="Property" />
		<set-property propertyName="Content-Type" value="application/json"
			doc:name="Property" />
		<set-payload
			value="{ &quot;message&quot;: &quot;Ne postoji ra&#269;un sa id: #[message.inboundProperties.'http.uri.params'.ID]&quot; }"
			doc:name="Set Payload" />
	</flow>
</mule>
