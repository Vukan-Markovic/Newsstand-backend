<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
	<db:template-query name="selectAllProizvodjac"
		doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\selectAllProizvodjac.sql" />
	</db:template-query>
	<db:template-query name="selectByIDProizvodjac"
		doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\selectByIDProizvodjac.sql" />
	</db:template-query>
	<db:template-query name="insertProizvodjac" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\insertProizvodjac.sql" />
	</db:template-query>
	<db:template-query name="updateProizvodjac" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\updateProizvodjac.sql" />
	</db:template-query>
	<db:template-query name="deleteProizvodjac" doc:name="Template Query">
		<db:parameterized-query file="src\test\resources\deleteProizvodjac.sql" />
	</db:template-query>
	<flow name="proizvodjac_implementationFlow">
		<set-variable variableName="active"
			value="#[message.inboundProperties.active]" doc:name="Variable"
			metadata:id="ed9a7ab7-c43f-45c4-bf92-2a29feb099a7" />
		<choice doc:name="Choice">
			<when expression="#[flowVars.active == empty]">
				<flow-ref name="getProizvodjaciFlow" doc:name="getProizvodjaciFlow" />
			</when>
			<otherwise>
				<flow-ref name="getProizvodjaciFlow2" doc:name="getProizvodjaciFlow2" />
			</otherwise>
		</choice>
	</flow>
	<flow name="getProizvodjaciFlow2">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="selectAllProizvodjac" />
		</db:select>
		<choice doc:name="Choice">
			<when expression="#[payload == empty]">
				<set-property doc:name="Property" propertyName="Content-Type"
					value="application/json"/>
				<set-payload doc:name="Set Payload" value="{  &quot;message&quot;: &quot;Trenutno nema proizvo&#273;a&#269;a u bazi podataka&quot; }"/>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message" metadata:id="03ca333c-c726-4c0a-b760-6c9cbc9fdacb">
					<dw:input-payload doc:sample="sample_data\Proizvodjac.dwl" mimeType="application/java"/>
					<dw:set-payload resource="classpath:json_proizvodjac_playground.dwl"/>
				</dw:transform-message>
			</otherwise>
		</choice>

	</flow>
	<flow name="getProizvodjaciFlow">
		<logger level="INFO" doc:name="Logger" message="#[payload]" />

	</flow>
	<flow name="getProizvodjacByIDFlow">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="selectByIDProizvodjac" />
		</db:select>
		<choice doc:name="Choice">
			<when expression="#[payload == empty]">
				<flow-ref name="proizvodjacErrorFlow" doc:name="proizvodjacErrorFlow" />
			</when>
			<otherwise>
				<flow-ref name="proizvodjacSuccessFlow" doc:name="proizvodjacSuccessFlow" />
			</otherwise>
		</choice>
	</flow>
	<flow name="proizvodjacErrorFlow">
		<set-property propertyName="http.status" value="404"
			doc:name="Property" />
		<set-payload
			value="Ne postoji proizvo&#273;a&#269; sa id: #[message.inboundProperties.'http.uri.params'.ID]."
			doc:name="Set Payload" />
	</flow>
	<flow name="proizvodjacSuccessFlow">
		<dw:transform-message doc:name="Transform Message"
			metadata:id="0fe42e8b-1333-4c96-b646-7e402c963723">
			<dw:input-payload doc:sample="sample_data\Proizvodjac.dwl"
				mimeType="application/java" />
			<dw:set-payload resource="classpath:json_proizvodjac_playground.dwl" />
		</dw:transform-message>
	</flow>
	<flow name="postProizvodjacFlow">
		<dw:transform-message doc:name="Transform Message"
			metadata:id="48efdb66-77b0-3337-8ea5-070276a88acd">
			<dw:input-payload doc:sample="proizvodjac-example.json"
				mimeType="application/json" />
			<dw:set-payload resource="classpath:java_playground.dwl" />
		</dw:transform-message>
		<db:insert config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="insertProizvodjac" />
		</db:insert>
		<set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
		<set-payload doc:name="Set Payload" value="{ message: &quot;Dodat nov proizvod&quot; }"/>
	</flow>
	<flow name="putProizvodjacByIDFlow">
		<dw:transform-message doc:name="Transform Message"
			metadata:id="89c17333-7043-4111-a611-a88742c72419">
			<dw:input-payload doc:sample="proizvodjac-example.json"
				mimeType="application/json" />
			<dw:set-payload resource="classpath:java_playground.dwl" />
		</dw:transform-message>
		<db:update config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="updateProizvodjac" />

		</db:update>
		<set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
		<set-payload doc:name="Set Payload" value="{ message: &quot;A&#382;uriran/dodat proizvod sa id: #[message.inboundProperties.'http.uri.params'.ID]&quot; }"/>
	</flow>
	<flow name="deleteProizvodjacByIDFlow">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="Database">
			<db:template-query-ref name="selectByIDProizvodjac" />
		</db:select>
		<choice doc:name="Choice">
			<when expression="#[payload == empty]">
				<flow-ref name="proizvodjacErrorFlow" doc:name="proizvodjacErrorFlow" />
			</when>
			<otherwise>
				<db:delete config-ref="Generic_Database_Configuration"
					doc:name="Database">
					<db:template-query-ref name="deleteProizvodjac" />
				</db:delete>
				<set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
				<set-payload value="{ message: &quot;Obrisan proizvo&#273;a&#269; sa id: #[message.inboundProperties.'http.uri.params'.ID]&quot; }" doc:name="Set Payload"/>

			</otherwise>
		</choice>

	</flow>
</mule>
